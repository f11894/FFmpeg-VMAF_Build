name: Build on Windows

on: [push, pull_request]

jobs:
  build:
    runs-on: windows-latest
    strategy:
      matrix:
        branch: [v2.3.1]
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - uses: msys2/setup-msys2@v2
      with:
        location: D:\msys2_github\
        update: true
        install: >-
            mingw-w64-x86_64-cmake
            mingw-w64-x86_64-gcc
            mingw-w64-x86_64-nasm
            mingw-w64-x86_64-yasm
            mingw-w64-x86_64-ninja
            mingw-w64-x86_64-pkg-config
            mingw-w64-x86_64-meson
            git
            base-devel
            autotools
        msystem: MINGW64
        path-type: strict
    - name: build
      shell: msys2 {0}
      run: |
        export LDFLAGS="-static -static-libgcc -static-libstdc++ -s"
        git clone https://code.videolan.org/videolan/x264.git && cd x264
        ./configure --disable-opencl --enable-static --prefix=/mingw64/
        make -j2
        make install
        
        git clone https://code.videolan.org/videolan/dav1d
        cd dav1d
        mkdir dav1d_build
        cd dav1d_build
        meson .. --buildtype release --default-library static --prefix=/mingw64/
        ninja
        ninja install
        
        git clone -b ${{ matrix.branch }} https://github.com/Netflix/vmaf
        cd vmaf/libvmaf
        meson build --buildtype release --default-library static --prefix=/mingw64/
        ninja -vC build install
        
        echo Libs.private: -lstdc++>>"D:\msys2_github\msys64\mingw64\lib\pkgconfig\libvmaf.pc"

        git clone -b release/4.4 https://git.videolan.org/git/ffmpeg.git
        git clone https://github.com/fraunhoferhhi/xpsnr.git
        cp xpsnr/libavfilter/* ffmpeg/libavfilter/
        cd ffmpeg
        ./configure --disable-debug --disable-w32threads --enable-version3 --enable-gpl --enable-pthreads --enable-libvmaf --enable-libdav1d --enable-libx264 --enable-static --pkg-config-flags=--static
        make -j 2
    - name: postprocessing
      shell: cmd
      run: |
        copy /y ffmpeg\ffmpeg.exe ffmpeg.exe
        copy /y ffmpeg\ffprobe.exe ffprobe.exe
    - name: Upload result
      uses: actions/upload-artifact@v2
      with:
        name: FFmpeg-VMAF_v${{ matrix.branch }}
        path: |
          ffmpeg.exe
          ffprobe.exe
