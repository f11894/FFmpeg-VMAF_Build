name: Build on Windows

on: [push, pull_request]

jobs:
  build:
    runs-on: windows-latest
    strategy:
      matrix:
        branch: [v2.3.0]
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Install dependencies
      shell: cmd
      run: |
        C:\msys64\usr\bin\bash -lc "pacman -S git mingw-w64-x86_64-nasm mingw-w64-x86_64-yasm mingw-w64-x86_64-meson mingw-w64-x86_64-ninja --noconfirm"
    - name: build
      shell: cmd
      run: |
        set MSYSTEM=MINGW64
        rem set HOME=${{ github.workspace }}
        rem set CFLAGS=-flto
        rem set CXXFLAGS=%CFLAGS%
        set LDFLAGS=-static -static-libgcc -static-libstdc++ -flto -s
        C:\msys64\usr\bin\bash -lc "git clone https://code.videolan.org/videolan/x264.git && cd x264 && ./configure --disable-opencl --enable-static --prefix=/mingw64/ && make -j2 && make install"
        C:\msys64\usr\bin\bash -lc "git clone https://code.videolan.org/videolan/dav1d && cd dav1d && mkdir dav1d_build && cd dav1d_build && meson .. --buildtype release --default-library static --prefix=/mingw64/ && ninja && ninja install"
        C:\msys64\usr\bin\bash -lc "git clone -b ${{ matrix.branch }} https://github.com/Netflix/vmaf && cd vmaf/libvmaf && meson build --buildtype release --default-library static --prefix=/mingw64/ && ninja -vC build install"
        type C:\msys64\mingw64\lib\pkgconfig\libvmaf.pc
        echo Libs.private: -lstdc++>>"C:\msys64\mingw64\lib\pkgconfig\libvmaf.pc"
        type C:\msys64\mingw64\lib\pkgconfig\libvmaf.pc
        rem -b release/4.4
        C:\msys64\usr\bin\bash -lc "git clone -b release/4.4 https://git.videolan.org/git/ffmpeg.git"
        C:\msys64\usr\bin\bash -lc "git clone https://github.com/fraunhoferhhi/xpsnr.git && cp xpsnr/libavfilter/* ffmpeg/libavfilter/"
        C:\msys64\usr\bin\bash -lc "cd ffmpeg && ./configure --disable-debug --disable-w32threads --enable-version3 --enable-gpl --enable-pthreads --enable-libvmaf --enable-libdav1d --enable-libx264 --enable-static --pkg-config-flags=--static && make -j 2"
        copy /y C:\msys64\home\%username%\ffmpeg\ffmpeg.exe ffmpeg.exe
        copy /y C:\msys64\home\%username%\ffmpeg\ffprobe.exe ffprobe.exe
    - name: Upload result
      uses: actions/upload-artifact@v2
      with:
        name: FFmpeg-VMAF_v${{ matrix.branch }}
        path: |
          ffmpeg.exe
          ffprobe.exe
